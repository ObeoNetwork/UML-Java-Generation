[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2012 Obeo
 * All rights reserved.  This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 1.0
 * 
 * You can apply any license to the files generated with this module and Acceleo.
[/comment]
[module request('http://www.eclipse.org/uml2/4.0.0/UML')]


[query public reqOutgoingNavigableOwnedEnd(aClass : Class) : Set(Property)
   = reqSelfAssociationsNavigableOwnedEnd(aClass)
      ->union(reqOtherAssociationsNavigableOwnedEnd(aClass))->asOrderedSet()
/]

[query private reqSelfAssociationsNavigableOwnedEnd(aClass : Class) : Set(Property)
   = aClass.getAssociations()->select(ownedEnd.type->asSet()->size() = 1).navigableOwnedEnd->asOrderedSet()
/]

[query private reqOtherAssociationsNavigableOwnedEnd(aClass : Class) : Set(Property)
   = aClass.getAssociations()->select(navigableOwnedEnd->select(type <> aClass)->size() = 1).navigableOwnedEnd->select(type <> aClass)->asOrderedSet()
/]

[query public getAllInterfaces(aClass : Class) : Bag(NamedElement) = aClass.clientDependency->filter(Realization).supplier /]

[**
 * Returns all the operations of the interfaces implemented by the given class.
 * @param aClass The class.
 */]
[query public getAllInterfaceOperations(aClass : Class) : Sequence(Operation) =
	aClass.getAllInterfaces()->filter(Interface).ownedOperation->asSequence()
/]



	

