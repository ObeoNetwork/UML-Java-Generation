[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2011 Obeo
 * All rights reserved.  This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 1.0
 * 
 * You can apply any license to the files generated with this module and Acceleo.
[/comment]

[**
 * This module is the starting point of the generation.
 * @author Stephane Begaudeau - Obeo
 */]
[module workflow('http://www.eclipse.org/uml2/3.0.0/UML')]

[import org::obeonetwork::pim::uml2::gen::java::files::classFile /]
[import org::obeonetwork::pim::uml2::gen::java::files::commonFile /]
[import org::obeonetwork::pim::uml2::gen::java::files::enumerationFile /]
[import org::obeonetwork::pim::uml2::gen::java::files::interfaceFile /]
[import org::obeonetwork::pim::uml2::gen::java::files::packageFile /]
[import org::obeonetwork::pim::uml2::gen::java::services::commentServices /]

[template public generate(aModel : Model)]
[comment @main /]
[collectComments(aModel)/]
[for (aPackage : Package | aModel.eAllContents(Package))]
[aPackage.genInfoFile()/]
[aPackage.eContents(Class).generateClass()/]
[aPackage.eContents(Interface).generateInterface()/]
[aPackage.eContents(Enumeration).generateEnumeration()/]
[/for]
[/template]

[**
 * The entry point for collecting Comments and Documentation Eannotations.
 * @param aClass an UML Class.
 */]
[template public collectComments(aModel : Model)]
[aModel.clearComments()/]
[for (aComment : Comment | aModel.eAllContents(Comment))]
[aComment.collect()/]
[/for]
[/template]

[**
 * Generate the comments for the package in the package-info.java file .
 * @param aClass an UML Class.
 */]
[template public genInfoFile(aPackage : Package)]
[if (aPackage.hasComment() or aPackage.hasDocumentation())]
[file (aPackage.genFullPathInfoFile(), false, 'UTF-8')]
[aPackage.genFileBody()/]
[/file]
[/if]
[/template]

[**
 * The entry point of the generation of a class.
 * @param aClass an UML Class.
 */]
[template public generateClass(aClass : Class)]
[file (aClass.genFullPathFile(), false, 'UTF-8')]
[aClass.genFileHeader()/]
[aClass.genFileBody()/]
[/file]
[/template]

[**
 * The entry point of the generation of an interface.
 * @param anInterface an UML Interface.
 */]
[template public generateInterface(anInterface : Interface)]
[file (anInterface.genFullPathFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genFileBody()/]
[/file]
[/template]

[**
 * The entry point of the generation of an enumeration.
 * @param anEnumeration an UML enumeration.
 */]
[template public generateEnumeration(anEnumeration : Enumeration)]
[file (anEnumeration.genFullPathFile(), false, 'UTF-8')]
[anEnumeration.genFileHeader()/]
[anEnumeration.genFileBody()/]
[/file]
[/template]
