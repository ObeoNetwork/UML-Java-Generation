[comment encoding = UTF-8 /]
[module manifestXmlFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::obeonetwork::pim::uml2::gen::java::common::path/]


[template private  genManifestXmlFile(aComponent : Component)]
[aComponent.componentPath()/]/META-INF/MANIFEST.MF
[/template]

[template public manifestXmlFile(aComponent : Component)]
[file (aComponent.genManifestXmlFile(), false, 'UTF-8')]
Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: %bundleName
Bundle-SymbolicName: [aComponent.componentPath()/]
Bundle-Version: 2.0.0.qualifier
Bundle-Vendor: %providerName
Bundle-Localization: plugin
Bundle-RequiredExecutionEnvironment: J2SE-1.5
Bundle-ActivationPolicy: lazy
[aComponent.exportPackages()/]
[aComponent.importPackages()/]
[aComponent.requireBundles()/]

[/file]
[/template]

[template private exportPackages(aComponent : Component)]
Export-Package: [for (aPort : Port | aComponent.ownedPort) separator(',' + aComponent.lineSeparator())][aPort.type.ancestors(Package)->select(oclIsTypeOf(Package))->reverse().name->sep('.')/][/for]
[/template]

[template private importPackages(aComponent : Component)]
[if (not aComponent.ownedPort.type->filter(Type).oclIsKindOf(Component)->size() > 0)]
Import-Package: [for (aPort : Port | aComponent.ownedPort) separator(',' + aComponent.lineSeparator())][aPort.eInverse(ConnectorEnd).siblings()->filter(ConnectorEnd).role.type.ancestors(Package)->select(oclIsTypeOf(Package))->reverse().name->sep('.')/][/for]
[/if]
[/template]

[template private requireBundles(aComponent : Component)]
[if (aComponent.ownedPort.type->filter(Component)->size() > 0)]
Require-Bundle: [for (aPort : Port | aComponent.ownedPort) separator(',' + aComponent.lineSeparator())][aPort.eInverse(ConnectorEnd).siblings()->filter(ConnectorEnd).role.type.ancestors(Component)->reject(oclIsKindOf(Model)).name/][/for]
[/if]
[/template]