[comment encoding = UTF-8 /]
[module declaration('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::obeonetwork::pim::uml2::gen::java::common::type /]

[template public genName(aNamedElement : NamedElement)]
[aNamedElement.name/]
[/template]

[template public genMethodPrototype(anOperation : Operation)]
[genVisibility()/][genAbstract()/][genFinal()/][genStatic()/][genReturn()/] [genName()/]([genOperationParameters()/])[genOperationExceptions()/]
[/template]

[template public genOperationParameters(anOperation : Operation)]
[anOperation.ownedParameter->select(param : Parameter | not (param.direction = ParameterDirectionKind::return)).genOperationParameter()->sep(', ')/]
[/template]

[template public genOperationParameter(aParameter : Parameter)]
[aParameter.genType()/] [aParameter.genName()/]
[/template]

[template public genOperationExceptions(anOperation : Operation)]
[if (anOperation.raisedException->size() > 0)] throws [anOperation.raisedException.genName()->sep(', ')/][/if]
[/template]

[template public genInheritance(aClassifier : Classifier)]
[if (aClassifier.general->size() > 0)] extends [for (extendedClassifier : Classifier | aClassifier.general)][extendedClassifier.genName()/][/for][/if]
[/template]

[template public genInterfaceRealization(aClass : Class)]
[if (not aClass.clientDependency->filter(Realization)->isEmpty())] implements [for (namedElement : NamedElement | aClass.getAllInterfaces()) separator(', ')][namedElement.genName()/][/for][/if]
[/template]

[**
 * Returns all the interface of a given class.
 * @param aClass The class.
 */]
[query public getAllInterfaces(aClass : Class) : Bag(NamedElement) = aClass.clientDependency->filter(Realization).supplier /]


[template public genVisibility(aNamedElement : NamedElement)]
[if (not (aNamedElement.visibility = VisibilityKind::_package))][aNamedElement.visibility/] [else]/*package*/ [/if]
[/template]

[template public genAbstract(aClass : Class)]
[if (aClass.isAbstract)]abstract [/if]
[/template]

[template public genAbstract(anOperation : Operation)]
[if (anOperation.isAbstract)]abstract [/if]
[/template]

[template public genFinal(aRedefinableElement : RedefinableElement)]
[if (aRedefinableElement.isLeaf)]final [/if]
[/template]

[template public genFinal(aProperty : Property)]
[if (aProperty.isLeaf)]final [/if]
[/template]

[template public genStatic(aFeature : Feature)]
[if (aFeature.isStatic)]static [/if]
[/template]

[template public genDefaultValue(aProperty : Property)]
 = [computeDefault()/]
[/template]

[template public computeDefault(aProperty : Property) post(trim())]
[if (aProperty.upper = 1)]
    [if (not aProperty.default.oclIsUndefined())]
        [if (''.equalsIgnoreCase(aProperty.default) or aProperty.default = null)]
            [if (aProperty.getUserDefaultValue().equalsIgnoreCase(''))][aProperty.default/][else][aProperty.getUserDefaultValue()/][/if]
        [else]
            [if ('String'.equalsIgnoreCase(aProperty.type.genName()))][aProperty.default.addQuotes()/][else][aProperty.default/][/if]
        [/if]
    [else]
        [if ('String'.equalsIgnoreCase(aProperty.type.genName()))]
            ['""'/]
        [else]        
            [aProperty.getUserDefaultValue()/]
        [/if]
    [/if]
[else]
    [if (not aProperty.default.oclIsUndefined())]        
        new [aProperty.genType()/]()
    [else]
        new [aProperty.genType()/]()
    [/if]
[/if]
[/template]

[template public addQuotes(aString : String)]
"[aString/]"
[/template]

[template public getUserDefaultValue(aTypedElement : TypedElement) post(trim())]
[if (not getProperty('java.defaultvalue.' + aTypedElement.type.name).size().oclIsUndefined() and (getProperty('java.defaultvalue.' + aTypedElement.type.name).size() > 0) and not ''.equalsIgnoreCase(getProperty('java.defaultvalue.' + aTypedElement.type.name)))]
    [getProperty('java.defaultvalue.' + aTypedElement.type.name)/]
[else]
    null
[/if]
[/template]