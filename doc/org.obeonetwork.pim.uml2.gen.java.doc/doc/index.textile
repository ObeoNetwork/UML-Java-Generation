=Acceleo UML2 to Java Generator=

The Acceleo UML2 to Java generator is an UML to Java code generator based on Acceleo 3.2. This generator supports the generation of Java source code for classes, interfaces and enumerations. An user interface is also provided by this generator in order to easily launch the generations.

==Launching a generation==
You have three different ways to launch a generation with this plugin.

===Launch configuration===
You can right click on any ".uml" model and use the "Run" menu to launch the generation.

[[Image:../images/run-1.png|center]]

The first time, the launch configuration dialog will open and you will be able to select where the code should be generated. The following time, the configuration will be remembered and the launch configuration dialog will not open, the generation will proceed immediately. You can customize the launch configuration by adding more model to the generation.

[[Image:../images/launch-configuration.png|center]]

You can also create a launch configuration from scratch thanks to the "Run" -> "Run Configurations..." menu. there you just have to click on the "Acceleo UML2 to Java" category and push the "New configuration" button and a new empty launch configuration will be created.

===Builder===
The Acceleo UML2 to Java generator also features a builder to automatically launch a generation after any changes on a given ".uml" model. In order to activate this build, first right click on a project and select the "Toggle UML2 to Java Generation Nature" menu to add (or remove) the "UML2 to Java" nature. Once added, you can see that the project features a new marker indicating that the nature is in place. After each changes to a UML model, the builder will look for a file named "uml2java.properties" at the root of the project to look for the build configuration. The file must contain key/value following the given notation to launch the build:

<relative_path_of_the_model_in_the_project> = <relative_path_of_the_output_folder_in_the_same_project>

You can also add another property with the given convention to indicate if the output folder should be cleared before the next generation:

<relative_path_of_the_output_folder_in_the_same_project>__clear = true

[[Image:../images/properties.png|center]]

===Programmatically===
You can also launch the generation programmatically, for that, you just need to use the Java class named org.obeonetwork.pim.uml2.gen.java.main.Workflow in the Eclipse plug-in org.obeonetwork.pim.uml2.gen.java.


==Contact==
The source code of this plugin is available on [https://github.com/ObeoNetwork/UML-Java-Generation Github.com ] under the Eclipse Public Licence (EPL) v1.0